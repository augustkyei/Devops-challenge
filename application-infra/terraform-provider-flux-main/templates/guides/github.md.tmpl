---
subcategory: ""
page_title: "Bootstrap a cluster with GitHub"
description: |-
    An example of how to bootstrap a Kubernetes cluster and sync it with a GitHub repository.
---

# Bootstrap a cluster with GitHub

In order to follow the guide you'll need a GitHub account and a [personal access token](https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/creating-a-personal-access-token)
that can create repositories (check all permissions under repo).

Create the staging cluster using Kubernetes kind or set the kubectl context to an existing cluster:
```
kind create cluster --name staging
kubectl cluster-info --context kind-staging
```

With the following variables default values are set for all but `github_owner` and `github_token`.
{{ tffile "examples/github/variables.tf" }}

You can set these in the terminal that you are running your terraform command by exporting variables.
```shell
export TF_VAR_github_owner=<owner>
export TF_VAR_github_token=<token>
```

By using the GitHub provider to create a repository you can commit the manifests given by the
data sources `flux_install` and `flux_sync`. The cluster has been successfully after the same
manifests are applied to it.
{{ tffile "examples/github/main.tf" }}
